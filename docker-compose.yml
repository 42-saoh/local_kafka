version: "3.7"

services:
  zookeeper1:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper1
    ports:
      - "2181:2181"
    networks:
      - internal
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181 | grep 'imok'"]
      interval: 20s
      timeout: 10s
      retries: 3
    restart: always
    environment:
      ZOO_MY_ID: 1

  kafka1:
    image: wurstmeister/kafka:latest
    hostname: kafka1
    expose:
      - 9092
    ports:
      - 9093:9093
    depends_on:
      zookeeper1:
        condition: service_healthy
    networks:
      - internal
    restart: always
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka2:
    image: wurstmeister/kafka:latest
    hostname: kafka2
    expose:
      - 9092
    ports:
      - 9094:9093
    networks:
      - internal
    depends_on:
      zookeeper1:
        condition: service_healthy
    restart: always
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka3:
    image: wurstmeister/kafka:latest
    hostname: kafka3
    expose:
      - 9092
    ports:
      - 9095:9093
    networks:
      - internal
    depends_on:
      zookeeper1:
        condition: service_healthy
    restart: always
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CREATE_TOPICS: "deal:2:3, get:1:3"

  database:
    build:
      context: mysql
      dockerfile: Dockerfile
    image: mysql:lastest
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: kafka
      MYSQL_USER: saoh
      MYSQL_PASSWORD: 1234
    volumes:
      - ./mysql/data:/var/lib/mysql
  
  redis:
    image: redis:latest
    ports:
      - 6379:6379

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "4242:8080"
    networks:
      - internal
    environment:
      - "DYNAMIC_CONFIG_ENABLED=true"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0-arm64
    environment:
      - discovery.type=single-node
    expose:
      - 9200
    networks:
      - internal

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.13.0-arm64
    volumes:
      - ./conf/kafka-logstash-pipeline.conf:/usr/share/logstash/pipeline/kafka-logstash-pipeline.conf
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - elasticsearch
    expose:
      - 9600
    networks:
      - internal

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.13.0-arm64
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - internal

networks:
  internal: